{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-toggle",
  "type": "registry:component",
  "title": "Theme toggle",
  "description": "A nilva kit Theme toggle component.",
  "dependencies": [
    "next-themes",
    "@radix-ui/react-select",
    "lucide-react"
  ],
  "registryDependencies": [
    "select"
  ],
  "files": [
    {
      "path": "components/ui/theme-toggle.tsx",
      "content": "\"use client\";\r\n\r\nimport { useThemeContext } from \"@/context/theme-data-provider\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { useTheme } from \"next-themes\";\r\nimport { JSX } from \"react\";\r\n\r\nconst availableThemeColors = [\r\n  { name: \"Zinc\", light: \"bg-zinc-900\", dark: \"bg-zinc-700\" },\r\n  { name: \"Rose\", light: \"bg-rose-600\", dark: \"bg-rose-700\" },\r\n  { name: \"Blue\", light: \"bg-blue-600\", dark: \"bg-blue-700\" },\r\n  { name: \"Green\", light: \"bg-green-600\", dark: \"bg-green-500\" },\r\n  { name: \"Orange\", light: \"bg-orange-500\", dark: \"bg-orange-700\" },\r\n];\r\n\r\nexport function ThemeColorToggle(): JSX.Element {\r\n  const { themeColor, setThemeColor } = useThemeContext();\r\n  const { theme } = useTheme();\r\n\r\n  const createSelectItems = (): JSX.Element[] => {\r\n    return availableThemeColors.map(({ name, light, dark }) => (\r\n      <SelectItem key={name} value={name}>\r\n        <div className=\"item-center flex space-x-3\">\r\n          <div\r\n            className={cn(\r\n              \"rounded-full\",\r\n              \"w-[20px]\",\r\n              \"h-[20px]\",\r\n              theme === \"light\" ? light : dark\r\n            )}\r\n          />\r\n          <div className=\"text-sm\">{name}</div>\r\n        </div>\r\n      </SelectItem>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      onValueChange={(value) => setThemeColor(value as ThemeColors)}\r\n      defaultValue={themeColor}\r\n    >\r\n      <SelectTrigger className=\"w-[180px] ring-offset-transparent focus:ring-transparent\">\r\n        <SelectValue placeholder=\"Select Color\" />\r\n      </SelectTrigger>\r\n      <SelectContent className=\"border-muted\">\r\n        {createSelectItems()}\r\n      </SelectContent>\r\n    </Select>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/ui/theme-toggle.tsx"
    },
    {
      "path": "context/theme-data-provider.tsx",
      "content": "\"use client\";\r\nimport setGlobalColorTheme from \"../lib/theme-colors\";\r\nimport { useTheme } from \"next-themes\";\r\nimport { ThemeProviderProps } from \"next-themes\";\r\nimport React, {\r\n  createContext,\r\n  JSX,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst ThemeContext = createContext<ThemeColorStateParams>(\r\n  {} as ThemeColorStateParams\r\n);\r\n\r\nexport default function ThemeDataProvider({\r\n  children,\r\n}: ThemeProviderProps): JSX.Element | null {\r\n  const getSavedThemeColor = (): ThemeColors => {\r\n    try {\r\n      return (localStorage.getItem(\"themeColor\") as ThemeColors) || \"Zinc\";\r\n    } catch {\r\n      return \"Zinc\" as ThemeColors;\r\n    }\r\n  };\r\n\r\n  const [themeColor, setThemeColor] = useState<ThemeColors>(\r\n    getSavedThemeColor() as ThemeColors\r\n  );\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const { theme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    setGlobalColorTheme(theme as \"light\" | \"dark\", themeColor);\r\n\r\n    if (!isMounted) {\r\n      setIsMounted(true);\r\n    }\r\n  }, [themeColor, theme, isMounted]);\r\n\r\n  if (!isMounted) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ themeColor, setThemeColor }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useThemeContext(): ThemeColorStateParams {\r\n  return useContext(ThemeContext);\r\n}\r\n",
      "type": "registry:theme",
      "target": "context/theme-data-provider.tsx"
    },
    {
      "path": "./lib/theme-colors.ts",
      "content": "const themes = {\r\n    Orange: {\r\n        light: {\r\n            background: '0 0% 100%',\r\n            foreground: '20 14.3% 4.1%',\r\n            card: '0 0% 100%',\r\n            cardForeground: '20 14.3% 4.1%',\r\n            popover: '0 0% 100%',\r\n            popoverForeground: '20 14.3% 4.1%',\r\n            primary: '24.6 95% 53.1%',\r\n            primaryForeground: '60 9.1% 97.8%',\r\n            secondary: '60 4.8% 95.9%',\r\n            secondaryForeground: '24 9.8% 10%',\r\n            muted: '60 4.8% 95.9%',\r\n            mutedForeground: '25 5.3% 44.7%',\r\n            accent: '60 4.8% 95.9%',\r\n            accentForeground: '24 9.8% 10%',\r\n            destructive: '0 84.2% 60.2%',\r\n            destructiveForeground: '60 9.1% 97.8%',\r\n            border: '20 5.9% 90%',\r\n            input: '20 5.9% 90%',\r\n            ring: '24.6 95% 53.1%',\r\n            radius: '0.5rem',\r\n        },\r\n        dark: {\r\n            background: '20 14.3% 4.1%',\r\n            foreground: '60 9.1% 97.8%',\r\n            card: '20 14.3% 4.1%',\r\n            cardForeground: '60 9.1% 97.8%',\r\n            popover: '20 14.3% 4.1%',\r\n            popoverForeground: '60 9.1% 97.8%',\r\n            primary: '20.5 90.2% 48.2%',\r\n            primaryForeground: '60 9.1% 97.8%',\r\n            secondary: '12 6.5% 15.1%',\r\n            secondaryForeground: '60 9.1% 97.8%',\r\n            muted: '12 6.5% 15.1%',\r\n            mutedForeground: '24 5.4% 63.9%',\r\n            accent: '12 6.5% 15.1%',\r\n            accentForeground: '60 9.1% 97.8%',\r\n            destructive: '0 72.2% 50.6%',\r\n            destructiveForeground: '60 9.1% 97.8%',\r\n            border: '12 6.5% 15.1%',\r\n            input: '12 6.5% 15.1%',\r\n            ring: '20.5 90.2% 48.2%',\r\n        },\r\n    },\r\n    Blue: {\r\n        light: {\r\n            background: '0 0% 100%',\r\n            foreground: '222.2 84% 4.9%',\r\n            card: '0 0% 100%',\r\n            cardForeground: '222.2 84% 4.9%',\r\n            popover: '0 0% 100%',\r\n            popoverForeground: '222.2 84% 4.9%',\r\n            primary: '221.2 83.2% 53.3%',\r\n            primaryForeground: '210 40% 98%',\r\n            secondary: '210 40% 96.1%',\r\n            secondaryForeground: '222.2 47.4% 11.2%',\r\n            muted: '210 40% 96.1%',\r\n            mutedForeground: '215.4 16.3% 46.9%',\r\n            accent: '210 40% 96.1%',\r\n            accentForeground: '222.2 47.4% 11.2%',\r\n            destructive: '0 84.2% 60.2%',\r\n            destructiveForeground: '210 40% 98%',\r\n            border: '214.3 31.8% 91.4%',\r\n            input: '214.3 31.8% 91.4%',\r\n            ring: '221.2 83.2% 53.3%',\r\n            radius: '0.5rem',\r\n        },\r\n        dark: {\r\n            background: '222.2 84% 4.9%',\r\n            foreground: '210 40% 98%',\r\n            card: '222.2 84% 4.9%',\r\n            cardForeground: '210 40% 98%',\r\n            popover: '222.2 84% 4.9%',\r\n            popoverForeground: '210 40% 98%',\r\n            primary: '217.2 91.2% 59.8%',\r\n            primaryForeground: '222.2 47.4% 11.2%',\r\n            secondary: '217.2 32.6% 17.5%',\r\n            secondaryForeground: '210 40% 98%',\r\n            muted: '217.2 32.6% 17.5%',\r\n            mutedForeground: '215 20.2% 65.1%',\r\n            accent: '217.2 32.6% 17.5%',\r\n            accentForeground: '210 40% 98%',\r\n            destructive: '0 62.8% 30.6%',\r\n            destructiveForeground: '210 40% 98%',\r\n            border: '217.2 32.6% 17.5%',\r\n            input: '217.2 32.6% 17.5%',\r\n            ring: '224.3 76.3% 48%',\r\n        },\r\n    },\r\n    Green: {\r\n        light: {\r\n            background: '0 0% 100%',\r\n            foreground: '240 10% 3.9%',\r\n            card: '0 0% 100%',\r\n            cardForeground: '240 10% 3.9%',\r\n            popover: '0 0% 100%',\r\n            popoverForeground: '240 10% 3.9%',\r\n            primary: '142.1 76.2% 36.3%',\r\n            primaryForeground: '355.7 100% 97.3%',\r\n            secondary: '240 4.8% 95.9%',\r\n            secondaryForeground: '240 5.9% 10%',\r\n            muted: '240 4.8% 95.9%',\r\n            mutedForeground: '240 3.8% 46.1%',\r\n            accent: '240 4.8% 95.9%',\r\n            accentForeground: '240 5.9% 10%',\r\n            destructive: '0 84.2% 60.2%',\r\n            destructiveForeground: '0 0% 98%',\r\n            border: '240 5.9% 90%',\r\n            input: '240 5.9% 90%',\r\n            ring: '142.1 76.2% 36.3%',\r\n            radius: '0.5rem',\r\n        },\r\n        dark: {\r\n            background: '20 14.3% 4.1%',\r\n            foreground: '0 0% 95%',\r\n            card: '24 9.8% 10%',\r\n            cardForeground: '0 0% 95%',\r\n            popover: '0 0% 9%',\r\n            popoverForeground: '0 0% 95%',\r\n            primary: '142.1 70.6% 45.3%',\r\n            primaryForeground: '144.9 80.4% 10%',\r\n            secondary: '240 3.7% 15.9%',\r\n            secondaryForeground: '0 0% 98%',\r\n            muted: '0 0% 15%',\r\n            mutedForeground: '240 5% 64.9%',\r\n            accent: '12 6.5% 15.1%',\r\n            accentForeground: '0 0% 98%',\r\n            destructive: '0 62.8% 30.6%',\r\n            destructiveForeground: '0 85.7% 97.3%',\r\n            border: '240 3.7% 15.9%',\r\n            input: '240 3.7% 15.9%',\r\n            ring: '142.4 71.8% 29.2%',\r\n        },\r\n    },\r\n    Rose: {\r\n        light: {\r\n            background: '0 0% 100%',\r\n            foreground: '240 10% 3.9%',\r\n            card: '0 0% 100%',\r\n            cardForeground: '240 10% 3.9%',\r\n            popover: '0 0% 100%',\r\n            popoverForeground: '240 10% 3.9%',\r\n            primary: '346.8 77.2% 49.8%',\r\n            primaryForeground: '355.7 100% 97.3%',\r\n            secondary: '240 4.8% 95.9%',\r\n            secondaryForeground: '240 5.9% 10%',\r\n            muted: '240 4.8% 95.9%',\r\n            mutedForeground: '240 3.8% 46.1%',\r\n            accent: '240 4.8% 95.9%',\r\n            accentForeground: '240 5.9% 10%',\r\n            destructive: '0 84.2% 60.2%',\r\n            destructiveForeground: '0 0% 98%',\r\n            border: '240 5.9% 90%',\r\n            input: '240 5.9% 90%',\r\n            ring: '346.8 77.2% 49.8%',\r\n            radius: '0.5rem',\r\n        },\r\n        dark: {\r\n            background: '20 14.3% 4.1%',\r\n            foreground: '0 0% 95%',\r\n            card: '24 9.8% 10%',\r\n            cardForeground: '0 0% 95%',\r\n            popover: '0 0% 9%',\r\n            popoverForeground: '0 0% 95%',\r\n            primary: '346.8 77.2% 49.8%',\r\n            primaryForeground: '355.7 100% 97.3%',\r\n            secondary: '240 3.7% 15.9%',\r\n            secondaryForeground: '0 0% 98%',\r\n            muted: '0 0% 15%',\r\n            mutedForeground: '240 5% 64.9%',\r\n            accent: '12 6.5% 15.1%',\r\n            accentForeground: '0 0% 98%',\r\n            destructive: '0 62.8% 30.6%',\r\n            destructiveForeground: '0 85.7% 97.3%',\r\n            border: '240 3.7% 15.9%',\r\n            input: '240 3.7% 15.9%',\r\n            ring: '346.8 77.2% 49.8%',\r\n        },\r\n    },\r\n    Zinc: {\r\n        light: {\r\n            background: '0 0% 100%',\r\n            foreground: '240 10% 3.9%',\r\n            card: '0 0% 100%',\r\n            cardForeground: '240 10% 3.9%',\r\n            popover: '0 0% 100%',\r\n            popoverForeground: '240 10% 3.9%',\r\n            primary: '240 5.9% 10%',\r\n            primaryForeground: '0 0% 98%',\r\n            secondary: '240 4.8% 95.9%',\r\n            secondaryForeground: '240 5.9% 10%',\r\n            muted: '240 4.8% 95.9%',\r\n            mutedForeground: '240 3.8% 46.1%',\r\n            accent: '240 4.8% 95.9%',\r\n            accentForeground: '240 5.9% 10%',\r\n            destructive: '0 84.2% 60.2%',\r\n            destructiveForeground: '0 0% 98%',\r\n            border: '240 5.9% 90%',\r\n            input: '240 5.9% 90%',\r\n            ring: '240 5.9% 10%',\r\n            radius: '0.5rem',\r\n        },\r\n        dark: {\r\n            background: '240 10% 3.9%',\r\n            foreground: '0 0% 98%',\r\n            card: '240 10% 3.9%',\r\n            cardForeground: '0 0% 98%',\r\n            popover: '240 10% 3.9%',\r\n            popoverForeground: '0 0% 98%',\r\n            primary: '0 0% 98%',\r\n            primaryForeground: '240 5.9% 10%',\r\n            secondary: '240 3.7% 15.9%',\r\n            secondaryForeground: '0 0% 98%',\r\n            muted: '240 3.7% 15.9%',\r\n            mutedForeground: '240 5% 64.9%',\r\n            accent: '240 3.7% 15.9%',\r\n            accentForeground: '0 0% 98%',\r\n            destructive: '0 62.8% 30.6%',\r\n            destructiveForeground: '0 0% 98%',\r\n            border: '240 3.7% 15.9%',\r\n            input: '240 3.7% 15.9%',\r\n            ring: '240 4.9% 83.9%',\r\n        },\r\n    },\r\n};\r\n\r\ntype ThemeColors = keyof typeof themes;\r\n\r\nexport default function setGlobalColorTheme(themeMode: 'dark' | 'light', color: ThemeColors) {\r\n    const theme = themes[color][themeMode] as {\r\n        [key: string]: string;\r\n    };\r\n\r\n    const doc = document.documentElement;\r\n\r\n    const innerDoc = document.querySelector('iframe')?.contentDocument?.documentElement;\r\n\r\n    localStorage.setItem('themeColor', color);\r\n\r\n    for (const key in theme) {\r\n        if (doc) {\r\n            doc.style.setProperty(`--${key}`, theme[key]);\r\n        }\r\n        if (innerDoc) {\r\n            innerDoc.style.setProperty(`--${key}`, theme[key]);\r\n        }\r\n    }\r\n}\r\n",
      "type": "registry:file",
      "target": "./lib/theme-colors.ts"
    },
    {
      "path": "./types/theme-types.d.ts",
      "content": "type ThemeColors = 'Zinc' | 'Rose' | 'Blue' | 'Green' | 'Orange';\r\n\r\ntype ThemeColorStateParams = {\r\n    themeColor: ThemeColors;\r\n    setThemeColor: React.Dispatch<React.SetStateAction<ThemeColors>>;\r\n};\r\n",
      "type": "registry:file",
      "target": "./types/theme-types.d.ts"
    }
  ]
}